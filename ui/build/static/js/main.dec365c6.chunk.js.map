{"version":3,"sources":["requests/requests.js","components/CreateQuiz/redux/actions.js","components/CreateQuiz/subcomponents/QuizSettings.js","components/CreateQuiz/subcomponents/Question.js","components/UserProfile/routes/routes.js","components/UserProfile/UserInfo/UserInfo.js","components/QuizCard/QuizCard.js","components/Spinner/Spinner.js","components/Signup/Signup.js","routes/routes.js","components/Home/Home.js","components/Quizzes/Quizzes.js","components/CreateQuiz/CreateQuiz.js","components/UserProfile/Layout.js","components/Signin/Signin.js","hooks/spinner.js","components/Quiz/Quiz.js","components/Navbar/Navbar.js","components/Header/Header.js","components/CreateQuiz/redux/reducer.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["Requests","url","axios","get","this","data","post","quiz","id","addQuestions","payload","type","QuizSettings","routState","useState","quiz_title","quiz_expire","quiz_size","quiz_keywords","quiz_get_res","quiz_public","quizConfig","setQuizConfig","configRedux","useSelector","state","config","useEffect","dispatch","useDispatch","quizChange","e","persist","newState","target","getAttribute","value","name","checked","className","htmlFor","onChange","data-type","onClick","fieldTemplate","question","details","answers","Question","fields","setFields","questions","setQuestions","currentId","setCurrentId","reduxQuestions","length","dispath","inputChange","answerChange","index","onSubmit","preventDefault","defaultValue","map","item","key","placeholder","isCorrect","splice","deleteAnswer","xmlns","aria-hidden","focusable","data-prefix","data-icon","role","viewBox","fill","d","routes","path","component","props","console","log","isPublic","QuizCard","Spinner","requests","exact","history","useHistory","localStorage","getItem","push","quizzes","setQuizzes","a","getQuizzes","then","to","_id","activeStep","setActiveStep","addQuiz","match","route","email","password","errMessage","setErrMessage","spinner","setSpinner","status","useSpinner","login","res","setItem","JSON","stringify","user","window","location","reload","change","newFields","notForRegistred","password_r","f_name","l_name","company","position","registerNewUser","quizData","setQuizData","current","setCurrent","getQuiz","params","result","i","ind","notInMenu","Navbar","href","removeItem","Header","parse","reducer","action","Layout","store","createStore","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","unstable_createRoot","document","getElementById","render","URL","process","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dec365c6.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport class Requests {\r\n  url = 'http://localhost:2000'\r\n\r\n  async getAllUsers() {\r\n    return await axios.get(this.url+'/users');\r\n  }\r\n\r\n  async registerNewUser(data) {\r\n    return await axios.post(this.url + '/register', data);\r\n  }\r\n\r\n  async login(data) {\r\n    return await axios.post(this.url + '/auth', data);\r\n  }\r\n\r\n  async addQuiz(quiz) {\r\n    return await axios.post(this.url + '/createQuiz', quiz);\r\n  }\r\n\r\n  async getQuizzes() {\r\n    return await axios.get(this.url + '/quizzes');\r\n  }\r\n\r\n  async getQuiz(id) {\r\n    return await axios.get(this.url + '/quizzes/'+id);\r\n  }\r\n}","const ADD_CONFIG = \"ADD_CONFIG\";\r\nconst ADD_QUES = \"ADD_QUES\";\r\nconst ADD_FULL = \"ADD_FULL\";\r\n\r\nexport const addQuestions = (payload) => ({type: ADD_QUES, payload})\r\n\r\nexport const addData = (payload) => ({type: ADD_CONFIG, payload})\r\n\r\nexport const addFull = (payload) => ({type: ADD_FULL, payload})","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addData } from '../redux/actions';\r\n\r\nexport function QuizSettings({ routState }) {\r\n  const [quizConfig, setQuizConfig] = useState({\r\n    quiz_title: '',\r\n    quiz_expire: '',\r\n    quiz_size: '',\r\n    quiz_keywords: '',\r\n    quiz_get_res: false,\r\n    quiz_public: false,\r\n  })\r\n\r\n  const configRedux = useSelector(state => state.config);\r\n\r\n  useEffect(() => {\r\n    if(configRedux) {\r\n      setQuizConfig(configRedux);\r\n    }\r\n  }, [])\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const quizChange = (e) => {\r\n    e.persist();\r\n    const newState = {...quizConfig};\r\n    const type = e.target.getAttribute('data-type');\r\n    if(type && type === 'number') {\r\n      if(+e.target.value === +e.target.value){\r\n        newState[e.target.name] = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n      }\r\n    } else {\r\n      newState[e.target.name] = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n    }\r\n    setQuizConfig(newState);\r\n  }\r\n\r\n  const sendQuizSetting = () => {\r\n    routState('Questions');\r\n    dispatch(addData(quizConfig));\r\n  }\r\n\r\n  return(\r\n    <div className='quiz-details'>\r\n      <h2>Quiz Settings</h2>\r\n      <label htmlFor='quiz_title'>Quiz Title</label>\r\n      <input onChange={quizChange} value={quizConfig.quiz_title} type='text' name='quiz_title' id='quiz_title'></input>\r\n      <label htmlFor='quiz_size'>Expire Time (h)</label>\r\n      <input onChange={quizChange} value={quizConfig.quiz_expire} data-type='number' type='text' name='quiz_expire' id='quiz_expire'></input>\r\n      <label htmlFor='quiz_size'>Max size of Questions in a Quiz</label>\r\n      <input onChange={quizChange} value={quizConfig.quiz_size} data-type='number' name='quiz_size' type='text' id='quiz_size'></input>\r\n      <label htmlFor='quiz_size'>Quiz's Keywords</label>\r\n      <input onChange={quizChange} value={quizConfig.quiz_keywords} name='quiz_keywords' type='text' id='quiz_keywords'></input>\r\n      <label htmlFor='quiz_public'>Don't Show this Quiz in Search?</label>\r\n      <input onChange={quizChange} checked={quizConfig.quiz_public} name='quiz_public' type='checkbox' id='quiz_public'></input>\r\n      <label htmlFor='quiz_get_res'>Do You Wanna Get Results on Your Email?</label>\r\n      <input onChange={quizChange} checked={quizConfig.quiz_get_res} name='quiz_get_res' type='checkbox' id='quiz_get_res'></input>\r\n      <button onClick={sendQuizSetting} type='button'>Next Step</button>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addQuestions } from '../redux/actions';\r\n\r\nconst fieldTemplate = {\r\n  question: '',\r\n  type: 'checkbox',\r\n  details: '',\r\n  answers: [],\r\n}\r\n\r\nexport function Question({ routState }) {\r\n  const [fields, setFields] = useState(fieldTemplate)\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentId, setCurrentId] = useState(0);\r\n\r\n  const reduxQuestions = useSelector(state => state.questions);\r\n\r\n  useEffect(() => {\r\n    if(reduxQuestions?.length) {\r\n      setQuestions(reduxQuestions);\r\n      setFields(reduxQuestions[currentId]);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(questions.length) {\r\n      if(questions[currentId]) {\r\n        setFields(questions[currentId])\r\n      } else {\r\n        setFields(fieldTemplate);\r\n      }\r\n    }\r\n  }, [currentId])\r\n  \r\n  const dispath = useDispatch();\r\n\r\n  const addAnswer = () => {\r\n    setFields((state) => ({...state, answers: [...state.answers, {\r\n      placeholder: 'Enter answer',\r\n      value: '',\r\n      isCorrect: false\r\n    }]}))\r\n  }\r\n\r\n  const deleteAnswer = (index) => {\r\n    const newState = {...fields};\r\n    newState.answers.splice(index, 1);\r\n    setFields(newState);\r\n  }\r\n\r\n  const inputAnswer = (e) => {\r\n    const newState = {...fields};\r\n    newState.answers.length = 1;\r\n    newState.answers[0].value = e.target.value;\r\n    newState.answers[0].isCorrect = true;\r\n    setFields(newState);\r\n  }\r\n\r\n  const inputChange = (e) => {\r\n    e.persist();\r\n    const newState = {...fields};\r\n    newState[e.target.name] = e.target.value;\r\n    setFields(newState);\r\n  }\r\n\r\n  const answerChange = (index, e) => {\r\n    const newState = {...fields};\r\n    newState.answers[index][e.target.name] = e.target.type !== 'text' ? e.target.checked : e.target.value;\r\n    setFields(newState);\r\n  }\r\n\r\n  const addQuestion = (e) => {\r\n    e.preventDefault();\r\n    dispath(addQuestions(questions));\r\n    setFields(fieldTemplate);\r\n    setQuestions([...questions, fields])\r\n    setCurrentId(state => state + 1);\r\n  }\r\n\r\n  const prevStep = () => {\r\n    routState('Settings');\r\n    dispath(addQuestions(questions));\r\n  }\r\n\r\n  return(\r\n    <div className='question-details'>\r\n    <h2>Questions</h2>\r\n    <form onSubmit={addQuestion}>\r\n      <label htmlFor='new-question-title' >Enter your question</label>\r\n      <input \r\n        onChange={inputChange}\r\n        name='question' \r\n        id='new-question-title' \r\n        type='text'\r\n        value={fields.question}/>\r\n      <label htmlFor='new-question-detail'>Enter more details (optional)</label>\r\n      <textarea \r\n        onChange={inputChange}\r\n        name='details'\r\n        id='new-question-detail' \r\n        type='text' \r\n        value={fields.details}/>\r\n      <label>Choose question type</label>\r\n      <select onChange={inputChange} name='type' >\r\n        <option defaultValue value='checkbox'>Checkbox</option>\r\n        <option value='radio'>Radio</option>\r\n        <option value='input'>Input</option>\r\n      </select>\r\n      <div className='signin-quiz-questions'>\r\n        { fields.type !== 'input' && fields.answers.map((item, index) => \r\n          <div key={index}>\r\n            <input name='value' onChange={(e) => answerChange(index, e)} placeholder={item.placeholder} value={item.value}/>\r\n            <div className='answer-controll'>\r\n              <div>\r\n                <label htmlFor={`correct-item-${index}`}>Correct?</label>\r\n                <input \r\n                  checked={item.isCorrect}\r\n                  onChange={(e) => answerChange(index, e)} \r\n                  name='isCorrect'\r\n                  id={`correct-item-${index}`} \r\n                  type={fields.type}/>\r\n              </div>\r\n              <svg onClick={() => deleteAnswer(index)}  xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"trash-alt\" className=\"svg-inline--fa fa-trash-alt fa-w-14\" role=\"img\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"/></svg>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {fields.type === 'input' && \r\n        <div>\r\n          <input \r\n            onChange={inputAnswer}\r\n            placeholder={fields.answers[0]?.placeholder} \r\n            value={fields.answers[0]?.value}/>\r\n        </div>\r\n      }\r\n      <div className='questions-controlls'>\r\n        <div>\r\n          <button onClick={addAnswer} type='button'>Add Answer</button>\r\n          <button type='submit'>Add the Question</button>\r\n        </div>\r\n        <div>\r\n          {currentId !== 0 && <button onClick={() => currentId > 0 && setCurrentId(currentId-1)} type='button'>Prev Question</button>}\r\n          {currentId !== questions.length && <button onClick={() => questions.length && currentId < questions.length && setCurrentId(currentId+1)} type='button'>Next Question</button>}\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <button onClick={prevStep} type='button'>Prev Step</button>\r\n  </div>\r\n  )\r\n}","import { UserInfo } from '../UserInfo/UserInfo';\r\n\r\nexport const routes = [\r\n  {\r\n    path: '/test',\r\n    component: UserInfo,\r\n    isPublic: false,\r\n    name: 'Home'\r\n  },\r\n]","import React from 'react';\r\n\r\nexport function UserInfo(props) {\r\n  console.log(props)\r\n  return(\r\n    <div>\r\n      User Home page\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport './card.scss';\r\n\r\nexport function QuizCard({question, id}) {\r\n  return(\r\n    <div className='quiz-card'>\r\n      <h2>{question.question}</h2>\r\n      <p>{question.details}</p>\r\n      <form>\r\n        {question.answers.map((item, index) => {\r\n          const name = question.type === 'radio' ? 'radio' : `${question.type}-${index}`\r\n          return(\r\n            <div key={index}>\r\n              <label htmlFor={`quiz-${id}-${index}`}>{item.value}</label>\r\n              <input name={name} id={`quiz-${id}-${index}`} type={question.type}></input>\r\n            </div>\r\n          )\r\n        })}\r\n      </form>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport './spinner.scss';\r\n\r\nexport function Spinner() {\r\n  return(\r\n    <div className='spinner-wrapper'>\r\n      <div className=\"load-spinner\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Requests } from '../../requests/requests';\r\n\r\nconst requests = new Requests();\r\n\r\nexport function Signup() {\r\n  const [fields, setFields] = useState({\r\n    email: '',\r\n    password: '',\r\n    password_r: '',\r\n    f_name: '',\r\n    l_name: '',\r\n    company: '',\r\n    position: ''\r\n  });\r\n\r\n  function createNewUser(e) {\r\n    e.preventDefault();\r\n    requests.registerNewUser(fields);\r\n  }\r\n\r\n  function change(e) {\r\n    e.persist();\r\n    const newFields = {...fields};\r\n    newFields[e.target.name] = e.target.value;\r\n    setFields(newFields);\r\n  } \r\n\r\n  return(\r\n    <div className='signin'>\r\n      <h2>Create a new account</h2>\r\n      <form onSubmit={createNewUser}>\r\n        <label htmlFor='email'>Email</label>\r\n        <input onChange={change} value={fields.email} name='email' type='text' id='email'></input>\r\n        <label htmlFor='password'>Password</label>\r\n        <input onChange={change} value={fields.password} name='password' type='password' id='password'></input>\r\n        <label htmlFor='password_r'>Repeat Password</label>\r\n        <input onChange={change} value={fields.password_r} type='password' name='password_r' id='password_r'></input>\r\n        <label htmlFor='f_name'>First Name</label>\r\n        <input onChange={change} value={fields.f_name} name=\"f_name\" type='text' id='f_name'></input>\r\n        <label htmlFor='l_name'>Last Name</label>\r\n        <input onChange={change} value={fields.l_name} name=\"l_name\" type='text' id='l_name'></input>\r\n        <label htmlFor='company'>Company Name</label>\r\n        <input onChange={change} value={fields.company} name=\"company\" type='text' id='company'></input>\r\n        <label htmlFor='position'>Your Position</label>\r\n        <input onChange={change} value={fields.position} name=\"position\" type='text' id='position'></input>\r\n        <button type='submit'>Create</button>\r\n      </form>\r\n      <p>Already have an account? <Link to='/signin'>Signin</Link></p>\r\n    </div>\r\n  )\r\n}","import { Home } from '../components/Home/Home';\r\nimport { Quizzes } from '../components/Quizzes/Quizzes';\r\nimport { CreateQuizz } from '../components/CreateQuiz/CreateQuiz';\r\nimport { UserProfile } from '../components/UserProfile/Layout';\r\nimport { Quiz } from '../components/Quiz/Quiz';\r\nimport { Signin } from '../components/Signin/Signin';\r\nimport { Signup } from '../components/Signup/Signup';\r\n\r\nexport const routes = [\r\n  {\r\n    path: '/',\r\n    exact: true,\r\n    component: Home,\r\n    isPublic: true,\r\n    name: 'Home',\r\n  },\r\n  {\r\n    path: '/quizzes',\r\n    exact: true,\r\n    component: Quizzes,\r\n    isPublic: true,\r\n    name: 'Quizzes',\r\n  },\r\n  {\r\n    path: '/new-quiz',\r\n    component: CreateQuizz,\r\n    isPublic: false,\r\n    name: 'New Quiz',\r\n  },\r\n  {\r\n    path: '/user-profile',\r\n    component: UserProfile,\r\n    isPublic: false,\r\n    name: 'User Profile',\r\n  },\r\n  {\r\n    path: '/signin',\r\n    component: Signin,\r\n    isPublic: true,\r\n    name: 'Signin',\r\n    notForRegistred: true,\r\n  },\r\n  {\r\n    path: '/signup',\r\n    component: Signup,\r\n    isPublic: true,\r\n    name: 'Signup',\r\n    notForRegistred: true,\r\n  },\r\n  {\r\n    path: '/quizzes/:id',\r\n    component: Quiz,\r\n    isPublic: true,\r\n    name: 'Quiz',\r\n    notInMenu: true,\r\n    notForRegistred: false,\r\n  },\r\n]","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './home.scss';\r\n\r\nexport function Home() {\r\n  const history = useHistory();\r\n\r\n  function createNewQuizzBtn() {\r\n    if(localStorage.getItem('user')) {\r\n      history.push('/new-quiz');\r\n    } else {\r\n      history.push('/signin');\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className='home-page'>\r\n      <h1 className='home-page_title'>Welcome to Quizzer.</h1>\r\n      <h2 className='home-page_desc'>Do you wanna <button type='button' onClick={createNewQuizzBtn}>create</button> a new quiz?</h2>\r\n      <p className='home-page_text'>You can pass all opened quiz or create your own.</p>\r\n      <p className='home-page_text'>If you wanna save and share you quiz, you need to login or create new accout.</p>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Requests } from '../../requests/requests';\r\n\r\nexport function Quizzes() {\r\n  const [quizzes, setQuizzes] = useState([]);\r\n  const requests = new Requests;\r\n\r\n  console.log(quizzes)\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setQuizzes(await requests.getQuizzes().then(data => data.data.data));\r\n    })();\r\n  }, [])\r\n\r\n  return(\r\n    <div>\r\n      <ul>\r\n        {quizzes.map((item, index) => <li key={index}><Link to={'/quizzes/' + item._id}>{item.config.quiz_title}</Link></li>)}\r\n      </ul>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Requests } from '../../requests/requests';\r\nimport { QuizSettings } from './subcomponents/QuizSettings';\r\nimport { Question } from './subcomponents/Question';\r\nimport { defaultQuiz } from './default_quiz/default';\r\nimport { addFull } from './redux/actions';\r\n\r\nexport function CreateQuizz() {\r\n  const [activeStep, setActiveStep] = useState('Settings');\r\n  const requests = new Requests();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // dispatch(addFull(defaultQuiz));\r\n  })\r\n\r\n  const quiz = useSelector(state => state); \r\n\r\n  const sendQuiz = () => {\r\n    requests.addQuiz(quiz);\r\n  }\r\n\r\n  return(\r\n    <div className='signin quiz'>\r\n      {activeStep === 'Settings' && <QuizSettings routState={setActiveStep}/>}\r\n      {activeStep === 'Questions' && <Question routState={setActiveStep}/>}\r\n      <button onClick={ sendQuiz } type='button'>Create Quiz</button>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { Route, HashRouter, Switch } from 'react-router-dom';\r\nimport { routes } from './routes/routes';\r\nexport function UserProfile({match}) {\r\n  // console.log(match.params.id)\r\n  return(\r\n    <HashRouter>\r\n      <Switch>\r\n        {routes.map((route, index) => \r\n          <Route \r\n            key={index}\r\n            exact={route.path === '/' ? true : false} \r\n            path={route.path}\r\n            component={route.component}\r\n          />\r\n          )\r\n        }\r\n      </Switch>\r\n    </HashRouter>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { Link, useHistory} from 'react-router-dom';\r\nimport { useSpinner } from '../../hooks/spinner';\r\nimport { Requests } from '../../requests/requests';\r\nimport './signin.scss';\r\n\r\nexport function Signin() {\r\n  const [fields, setFields] = useState({\r\n    email: '',\r\n    password: ''\r\n  })\r\n  const [errMessage, setErrMessage] = useState('');\r\n  const [Spinner, setSpinner] = useSpinner();\r\n  \r\n  const history = useHistory();\r\n\r\n  async function auth(e) {\r\n    e.preventDefault();\r\n    setSpinner(true);\r\n    const requests = new Requests();\r\n    try {\r\n      const res = await requests.login(fields);\r\n      localStorage.setItem('user', JSON.stringify(res.data.user))\r\n      history.push('/');\r\n      window.location.reload();\r\n      setSpinner(false)\r\n    } catch(e) {\r\n      setErrMessage('Email or password is not correct');\r\n      setSpinner(false)\r\n    }\r\n  }\r\n\r\n  function change(e) {\r\n    e.persist();\r\n    const newFields = {...fields};\r\n    newFields[e.target.name] = e.target.value;\r\n    setFields(newFields);\r\n  } \r\n\r\n  return(\r\n    <>\r\n      {Spinner && <Spinner/>}\r\n      <div className='signin'>\r\n        <h2 className='signin_title'>Sign in</h2>\r\n        <form className='signin_form' onSubmit={auth}>\r\n          {errMessage && <p className='signin_form_error'>{errMessage}</p>}\r\n          <label htmlFor='email'>Email</label>\r\n          <input onChange={change} value={fields.email} name='email' type='text' id='email'></input>\r\n          <label htmlFor='password'>Password</label>\r\n          <input onChange={change} value={fields.password} name='password' type='password' id='password'></input>\r\n          <button type='submit'>Submit</button>\r\n        </form>\r\n        <p className='signin_sub-text'>Don't have an account? <Link to='/signup'>Signup</Link></p>\r\n      </div>\r\n    </>\r\n  )\r\n}","import { useState } from 'react';\r\nimport { Spinner } from '../components/Spinner/Spinner';\r\n\r\nexport function useSpinner() {\r\n  const [spinner, setSpinner] = useState(false);\r\n  \r\n  function setStatus(status) {\r\n    setSpinner(status);\r\n  }\r\n\r\n  return [spinner ? Spinner : '', setStatus];\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Requests } from '../../requests/requests';\r\nimport { QuizCard } from '../QuizCard/QuizCard';\r\nimport './quiz.scss';\r\n\r\nexport function Quiz({match}) {\r\n  const [quizData, setQuizData] = useState({});\r\n  const [current, setCurrent] = useState(0);\r\n  const requests = new Requests;\r\n  \r\n  useEffect(()=>{\r\n    ( async ()=>{\r\n      const result = await requests.getQuiz(match.params.id).then(data => data.data.data);\r\n      setQuizData(result);\r\n    })()\r\n  }, [])\r\n\r\n  return(\r\n    <div className='quiz-wrapper'>\r\n      {quizData.questions && <QuizCard id={current} question={quizData.questions[current]}/>}\r\n      <div className='indicators'>\r\n        {quizData.questions?.map((i, ind) => <div key={ind} className={`indicator ${ind < current ? 'passed' : ''} ${ind === current ? 'active' : ''}`}>{ind}</div>)}\r\n        <button type='button' onClick={() => current < quizData.questions?.length -1 ? setCurrent(current + 1) : current}>{current < quizData.questions?.length-1 ? 'Next' : 'Finish'}</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { routes } from '../../routes/routes';\r\nimport './navbar.scss';\r\n\r\nexport function Navbar() {\r\n  const signOut = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem('user');\r\n    window.location.reload();\r\n  }\r\n\r\n  return(\r\n    <header className='header'>\r\n      <nav className='header__nav'>\r\n        <div className='header__nav_home-link'>\r\n          <Link to='/'>QUIZZER</Link>\r\n        </div>\r\n        <ul className='header__nav_navigation-list'>\r\n          {routes.map((item, index) => \r\n            (item.isPublic || localStorage.getItem('user'))\r\n            && (!localStorage.getItem('user') || !item.notForRegistred)\r\n            && item.path !== '/' \r\n            && !item.notInMenu && <li key={index}><Link to={item.path}>{item.name}</Link></li>\r\n          )}\r\n          {localStorage.getItem('user') && <li><a href='' onClick={signOut}>Sign out</a></li>}\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './header.scss';\r\n\r\nexport function Header() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  return(\r\n    <div className='header-top'>\r\n      <div className='header-top__notification'></div>\r\n      <div className='header-top__user-info'>\r\n        <p className='header-top__user-info_welcome'>Welcome, {user ? user.f_name + ' ' + user.l_name : 'Guest'} </p>\r\n        <Link to='/user-profile'>\r\n          <div className='header-top__user-info_user-img'></div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}","export const reducer = (state={}, action) => {\r\n  switch(action.type) {\r\n    case \"ADD_CONFIG\":\r\n      return {...state, config: action.payload};\r\n    case \"ADD_QUES\":\r\n      return {...state, questions: action.payload};\r\n    case \"ADD_FULL\": \r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react'\r\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { Navbar } from './Navbar/Navbar';\r\nimport { Header } from './Header/Header';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport { reducer } from './CreateQuiz/redux/reducer';\r\nimport { routes } from '../routes/routes';\r\nimport './layout.scss';\r\n\r\nexport function Layout() {\r\n  const store = createStore(reducer);\r\n\r\n  return(\r\n    <HashRouter>\r\n      <Header/>\r\n      <div className='layout-wrapper'>\r\n        <Navbar/>\r\n        <div className='route-wrapper'>\r\n          <div className='route-wrapper_content'>\r\n            <Provider store={store}>\r\n              <Switch>\r\n                {routes.map((route, index) => \r\n                    (route.isPublic || localStorage.getItem('user'))\r\n                    && (!localStorage.getItem('user') || !route.notForRegistred)\r\n                    && <Route \r\n                      key={index}\r\n                      exact={route.exact ? true : false} \r\n                      path={route.path}\r\n                      component={route.component}\r\n                    />\r\n                  )\r\n                }\r\n                {/* <Redirect to='/'/> */}\r\n              </Switch>\r\n            </Provider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </HashRouter>\r\n  )\r\n}","import React from 'react';\nimport {Layout} from './components/Layout';\nimport './baseline.scss';\n\nfunction App() {\n  return (\n    <Layout/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.unstable_createRoot(document.getElementById('root')).render(<App />);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}